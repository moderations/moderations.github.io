{"version":3,"file":"js/template-list.615e84ec.js","mappings":"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","sources":["webpack://lowcode/./src/template-manage/template-list.vue","webpack://lowcode/src/template-manage/template-list.vue","webpack://lowcode/./src/template-manage/template-list.vue?1704","webpack://lowcode/./src/template-manage/template-list.vue?90e9","webpack://lowcode/./src/utils/db.js","webpack://lowcode/./src/api/menu.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticStyle:{\"padding\":\"20px 0\"}},[_c('el-button',{staticStyle:{\"margin-right\":\"5px\"},attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onAdd}},[_vm._v(\"新增\")])],1),_c('el-table',{attrs:{\"data\":_vm.data}},[_c('el-table-column',{attrs:{\"label\":\"Type\",\"prop\":\"type\"}}),_c('el-table-column',{attrs:{\"label\":\"备注\",\"prop\":\"remark\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function({ row, index }){return [_c('el-button',{staticStyle:{\"margin-right\":\"5px\"},attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.onEdit(row, index)}}},[_vm._v(\"编辑\")])]}}])})],1),_c('el-dialog',{attrs:{\"visible\":_vm.visible,\"title\":\"新增模板配置\"},on:{\"update:visible\":function($event){_vm.visible=$event}}},[_c('el-form',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],ref:\"formInline\",attrs:{\"model\":_vm.formData,\"label-width\":\"75px\"}},[_c('el-form-item',{attrs:{\"prop\":\"type\",\"label\":\"Type\",\"required\":\"\"}},[_c('el-input',{attrs:{\"type\":\"text\",\"placeholder\":\"请填写Type\"},model:{value:(_vm.formData.type),callback:function ($$v) {_vm.$set(_vm.formData, \"type\", $$v)},expression:\"formData.type\"}})],1),_c('el-form-item',{attrs:{\"prop\":\"remark\",\"label\":\"备注\",\"required\":\"\"}},[_c('el-input',{attrs:{\"type\":\"text\",\"placeholder\":\"请填写备注\"},model:{value:(_vm.formData.remark),callback:function ($$v) {_vm.$set(_vm.formData, \"remark\", $$v)},expression:\"formData.remark\"}})],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onAddTemplate}},[_vm._v(\"保存\")])],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <div style=\"padding: 20px 0\">\r\n            <el-button type=\"primary\" style=\"margin-right: 5px\" @click=\"onAdd\">新增</el-button>\r\n        </div>\r\n        <!-- <Table border :columns=\"columnData\" :data=\"data\">\r\n            <template slot-scope=\"{ row, index }\" slot=\"action\">\r\n                <Button type=\"primary\" size=\"small\" style=\"margin-right: 5px\" @click=\"onEdit(row, index)\">编辑</Button>\r\n            </template>\r\n        </Table> -->\r\n        <el-table :data=\"data\">\r\n            <el-table-column label=\"Type\" prop=\"type\"></el-table-column>\r\n            <el-table-column label=\"备注\" prop=\"remark\"></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n                <template slot-scope=\"{ row, index }\">\r\n                    <el-button type=\"primary\" size=\"small\" style=\"margin-right: 5px\" @click=\"onEdit(row, index)\">编辑</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <el-dialog\r\n            :visible.sync=\"visible\"\r\n            title=\"新增模板配置\">\r\n            <el-form ref=\"formInline\" :model=\"formData\" v-loading=\"loading\" label-width=\"75px\">\r\n                <el-form-item prop=\"type\" label=\"Type\" required>\r\n                    <el-input type=\"text\" v-model=\"formData.type\" placeholder=\"请填写Type\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"remark\" label=\"备注\" required>\r\n                    <el-input type=\"text\" v-model=\"formData.remark\" placeholder=\"请填写备注\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"onAddTemplate\">保存</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n            \r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n//   getSettingFormTemplate,\r\n  setSettingFormTemplate\r\n} from '@/api/menu';\r\n\r\nexport default {\r\n    data () {\r\n        return {\r\n            columnData: [\r\n                {\r\n                    title: 'Type',\r\n                    key: 'type',\r\n                },\r\n                {\r\n                    title: '备注',\r\n                    key: 'remark'\r\n                },\r\n                {\r\n                    title: '操作',\r\n                    slot: 'action',\r\n                    align: 'center'\r\n                }\r\n            ],\r\n            data: [\r\n                {\r\n                    type: 1,\r\n                    remark: '闸机检票配置',\r\n                },\r\n            ],\r\n            visible: false,\r\n            loading: false,\r\n            formData: {\r\n                type: '',\r\n                remark: ''\r\n            }\r\n\r\n        }\r\n    },\r\n    methods: {\r\n        onEdit(row) {\r\n            const {type} = row;\r\n            \r\n            this.$router.push({\r\n                name: 'TemplateConfig',\r\n                query: {type}\r\n            })\r\n        },\r\n\r\n        onAdd() {\r\n            this.visible = true;\r\n        },\r\n\r\n        async onAddTemplate() {\r\n            const {formData: {type, remark}, loading} = this;\r\n            \r\n            if(loading) return this.$message.error({background: true, message: '正在新增，请稍候'});\r\n            this.loading = true;\r\n\r\n            const res = await setSettingFormTemplate({type, remark, template: '[{\"headerTitle\":\"\",\"desc\":\"\",\"child\":[]}]'}).catch(e => e);\r\n\r\n            this.loading = false;\r\n            if(!res || res.code != 200) {\r\n                this.$message.error({background: true, message: res && (res.message || res.msg) || '新增表单模板出错'});\r\n                return;\r\n            }\r\n            this.$message.success({background: true, message: '新增表单模板成功'});\r\n            this.$router.push({\r\n                name: 'TemplateConfig',\r\n                query: {type, remark}\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./template-list.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./template-list.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./template-list.vue?vue&type=template&id=367f150e\"\nimport script from \"./template-list.vue?vue&type=script&lang=js\"\nexport * from \"./template-list.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","const dbMap = {\r\n    template: {\r\n        name: 'template',\r\n        keyPath: 'type',\r\n        indexes: [\r\n            {\r\n                index: 'type',\r\n                unique: true\r\n            },\r\n            // {\r\n            //     index: 'mobile',\r\n            //     unique: true\r\n            // },\r\n            // {\r\n            //     index: 'idcard',\r\n            //     unique: true\r\n            // },\r\n            'remark',\r\n            'template'\r\n        ]\r\n    }\r\n};\r\n\r\nexport function openDB(dbName, version = 1, options = {}) {\r\n    return new Promise((resolve, reject) => {\r\n        const indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n        let db;\r\n        const request = indexedDB.open(dbName, version);\r\n\r\n        request.onsuccess = function(e) {\r\n            db = e.target.result;\r\n            resolve(db);\r\n        }\r\n\r\n        request.onerror = function(e) {\r\n            reject(e.message);\r\n        }\r\n\r\n        request.onupgradeneeded = function(e) {\r\n            db = e.target.result;\r\n\r\n            const objectStoreName = options.objectStore || dbName;\r\n            const objectStore = db.createObjectStore(objectStoreName, {keyPath: dbMap[objectStoreName].keyPath});\r\n            \r\n            // objectStore.createIndex(dbMap[objectStoreName].keyPath, dbMap[objectStoreName].keyPath, {unique: true});\r\n            if( dbMap[objectStoreName].indexes ) {\r\n                dbMap[objectStoreName].indexes.forEach(index => {\r\n                    if( typeof index === 'string' ) objectStore.createIndex(index, index, {unique: false});\r\n                    else {\r\n                        objectStore.createIndex(index.index, index.index, {unique: index.unique});\r\n                    }\r\n                })\r\n            }\r\n            // objectStore.createIndex('name', 'name', {unique: false});\r\n            objectStore.transaction.oncomplete = function(e) {\r\n                const customObjectStore = db.transaction(objectStoreName, 'readwrite').objectStore(objectStoreName);\r\n\r\n                options && options.data && options.data.forEach(item => {\r\n                    customObjectStore.add(item);\r\n                })\r\n                // resolve(db);\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport function addData(db, storeName, data) {\r\n    var request = db\r\n                    .transaction([storeName],\"readwrite\") // 事务对象 指定表格名称和操作模式 (\"只读\"或\"读写\")\r\n                    .objectStore(storeName) // 仓库对象\r\n                    .add(data);\r\n \r\n    request.onsuccess = function (event){    \r\n        console.log(\"数据写入成功\");\r\n    };\r\n \r\n    request.onerror = function (event) {\r\n        console.log(\"数据写入失败\");\r\n    };\r\n}\r\n\r\nexport function getDataByKey(db, storeName, key, mode = 'readonly') {\r\n    return new Promise((resolve, reject) => {\r\n        console.log('getDataByKey key', key);\r\n        var transaction = db.transaction([storeName]); // 事务\r\n        var objectstore = transaction.objectStore(storeName); // 仓库对象\r\n        var request = objectstore.get(key); // 通过主键获取数据\r\n        request.onerror = function (event) {\r\n            console.log(\"事务失败\", event);\r\n            reject(event);\r\n        };\r\n    \r\n        request.onsuccess = function (event) {\r\n            console.log(\"主键查询结果:\", request.result);\r\n            resolve(request.result);\r\n        };\r\n    });\r\n}\r\n\r\nexport function getDataByCursor(db, storeName){\r\n    let list = [];\r\n    var store = db\r\n        .transaction(storeName, \"readwrite\") // 事务\r\n        .objectStore(storeName); // 仓库对象\r\n    var request = store.openCursor(); // 指针对象\r\n    // 游标开启成功,逐行读数据\r\n    request.onsuccess = function (e) {\r\n        var cursor = e.target.result;\r\n        if (cursor) {\r\n            // 必须要检查\r\n            list.push(cursor.value);\r\n            cursor.continue(); // 遍历了存储对象中的所有内容\r\n        } else {\r\n            console.log(\"游标读取的数据\",list);\r\n        }\r\n    };\r\n}\r\n\r\nexport function getDataByIndex(db, storeName, indexName, indexValue){\r\n    var store = db.transaction(storeName, \"readwrite\").objectStore(storeName);\r\n    var request = store.index(indexName).get(indexValue);\r\n    request.onerror = function () {\r\n        console.log(\"事务失败\");\r\n    };\r\n    request.onsuccess = function (e) {\r\n        var result = e.target.result;\r\n        console.log(\"索引查询结果:\", result);\r\n    };\r\n}\r\n\r\nexport function updateDB(db, storeName, data) {\r\n    return new Promise((resolve, reject) => {\r\n        var objectStore = db\r\n                        .transaction([storeName], \"readwrite\") // 事务对象\r\n                        .objectStore(storeName); // 仓库对象\r\n                        \r\n        const requestGet = objectStore.get(data.type);\r\n        \r\n        requestGet.onerror = function (e) {\r\n            console.log(\"主键查询失败\");\r\n            reject({code: 201, msg: e.message || '查询失败'});\r\n        };\r\n        requestGet.onsuccess = function (e) {\r\n            var result = e.target.result || data;\r\n\r\n            console.log(\"主键查询结果:\", result);\r\n            result.template = data.template;\r\n            \r\n            const requestUpdate = objectStore.put(result);\r\n            requestUpdate.onsuccess = function (e) {\r\n                console.log(\"数据更新成功\");\r\n                resolve({code: 200});\r\n            };\r\n        \r\n            requestUpdate.onerror = function (e) {\r\n                console.log(\"数据更新失败\");\r\n                reject({code: 201, msg: e.message || '更新失败'});\r\n            };\r\n        };\r\n    })\r\n}\r\n\r\nexport function deleteDB(db, storeName, id) {\r\n    var request = db\r\n        .transaction([storeName], \"readwrite\")\r\n        .objectStore(storeName)\r\n        .delete(id);\r\n    request.onsuccess = function () {\r\n        console.log(\"数据删除成功\");\r\n    };\r\n \r\n    request.onerror = function () {\r\n        console.log(\"数据删除失败\");\r\n    };\r\n}\r\n\r\nexport function cursorDelete(db,storeName,indexName,indexValue){\r\n    var store = db.transaction(storeName,\"readwrite\").objectStore(storeName);\r\n    var request = store\r\n        .index(indexName) // 索引对象\r\n        .openCursor(IDBKeyRange.only(indexValue)); // 指针对象\r\n    request.onsuccess = function (e) {\r\n        var cursor = e.target.result;\r\n        var deleteRequest;\r\n        if (cursor) {\r\n            deleteRequest = cursor.delete(); // 请求删除当前项\r\n            deleteRequest.onerror = function () {\r\n                console.log(\"游标删除该记录失败\");\r\n            };\r\n            deleteRequest.onsuccess = function () {    \r\n                console.log(\"游标删除该记录成功\");\r\n            };\r\n            cursor.continue();\r\n        }\r\n    };\r\n    request.onerror = function (e){ };\r\n}\r\n\r\nexport function closeDB(db) {\r\n    db.close();\r\n    console.log(\"数据库已关闭\");\r\n}\r\n\r\nexport function deleteDBAll(dbName){\r\n    console.log(dbName);\r\n    let deleteRequest = window.indexedDB.deleteDatabase(dbName);\r\n    deleteRequest.onerror = function (event) {\r\n        console.log(\"删除失败\");\r\n    };\r\n    deleteRequest.onsuccess = function (event) {\r\n        console.log(\"删除成功\");\r\n    };\r\n}","import {mock} from '@/utils/request';\r\nimport {openDB, updateDB, getDataByIndex, deleteDB, getDataByKey} from '@/utils/db';\r\n\r\nexport function setSettingFormTemplate(data) {\r\n    return new Promise(async (resolve, reject) => {\r\n        const db = await openDB('template').catch(e => e);\r\n\r\n        if( typeof db === 'string' ) return reject({code: 201, msg: db});\r\n        if( db instanceof Error ) return reject({code: 201, msg: db.message});\r\n\r\n        const request = await updateDB(db, 'template', data).catch(e => e);\r\n\r\n        if( request instanceof Error ) return reject({code: 201, msg: request.message});\r\n        return resolve({code: 200});\r\n    })\r\n    // return mock({\r\n    //     code: 200\r\n    // })\r\n}\r\n\r\nexport function getSettingFormTemplate({type} = {}) {\r\n    return new Promise(async (resolve, reject) => {\r\n        const db = await openDB('template').catch(e => e);\r\n\r\n        if( typeof db === 'string' ) return reject({code: 201, msg: db});\r\n        if( db instanceof Error ) return reject({code: 201, msg: db.message});\r\n\r\n        const data = await getDataByKey(db, 'template', type).catch(e => e);\r\n\r\n        if( data instanceof Error ) return reject({code: 201, msg: data.message});\r\n        return resolve({code: 200, data: JSON.parse(data.template) || []});\r\n    })\r\n    // return mock({\r\n    //     code: 200,\r\n    //     data: {}\r\n    // })\r\n}"],"names":["render","_vm","this","_c","_self","staticStyle","attrs","on","onAdd","_v","data","scopedSlots","_u","key","fn","row","index","$event","onEdit","visible","directives","name","rawName","value","loading","expression","ref","formData","model","type","callback","$$v","$set","remark","onAddTemplate","staticRenderFns","columnData","title","slot","align","methods","$router","push","query","$message","error","background","message","res","setSettingFormTemplate","template","catch","e","code","success","msg","component","dbMap","keyPath","indexes","unique","openDB","dbName","version","options","Promise","resolve","reject","indexedDB","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","db","request","open","onsuccess","target","result","onerror","onupgradeneeded","objectStoreName","objectStore","createObjectStore","forEach","createIndex","transaction","oncomplete","customObjectStore","item","add","getDataByKey","storeName","mode","console","log","objectstore","get","event","updateDB","requestGet","requestUpdate","put","async","Error","getSettingFormTemplate","JSON","parse"],"sourceRoot":""}